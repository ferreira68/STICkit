[tool.poetry]
name = "stickit"
version = "0.1.0"
description = "STIC generation pipeline: Stereoisomer, Tautomer, Ionization state, Conformer"
authors = ["Antonio M. Ferreira, Ph.D. <amferreira68@gmail.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "stickit" }]

[tool.poetry.requires-plugins]
poetry-plugin-export = "1.9.0"

[tool.poetry.dependencies]
python = ">=3.11,<3.13"
sqlalchemy = "^2.0.32"
psycopg = {version = "^3.2.1", extras=["binary"]}
pydantic = "^2.11.7"
pydantic-settings = "^2.4.0"
boto3 = "^1.34.162"
mlflow = "^1.26.0"
streamlit = "^1.37.1"
bokeh = "^3.5.0"
seaborn = "^0.13.2"
fastapi = "^0.115.0"
uvicorn = "^0.30.5"
pyspark = "^3.5.1"
gypsum-dl = "^1.2.3"
openmm = "~8.2"
openmm-cuda-12 = "~8.2"
openforcefields = { git = "https://github.com/openforcefield/openff-forcefields", rev = "2024.09.0" }
smirnoff99frosst = { git = "https://github.com/openforcefield/smirnoff99Frosst", rev = "1.1.0" }
openff-interchange = { git = "https://github.com/openforcefield/openff-interchange", rev = "v0.4.4" }
openff-toolkit = { git = "https://github.com/openforcefield/openff-toolkit.git", extras = ["all"], rev =  "0.16.10" }
openff-units = { git = "https://github.com/openforcefield/openff-units", rev = "0.3.1" }
openff-utilities = { git = "https://github.com/openforcefield/openff-utilities", rev = "v0.1.15"}
networkx = "3.4.2"
numpy = "^1.26"
pyyaml = "^6.0"
typing-extensions = "^4.12"
rdkit = "^2025.3.5"
dimorphite-dl = "^2.0.2"
pip = "==25.2"
pint = "^0.24.4"
importlib-resources = "^6.5.2"
cachetools = "^6.1.0"
xmltodict = "^0.14.2"
notebook = "^7.4.5"
simtk = "^0.1.0"
python-constraint = "^1.4.0"
rich = "^14.1.0"
parmed = "^4.3.0"
sphinxcontrib-mermaid = "^1.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "^0.6.9"
black = "^24.10.0"
mypy = "^1.11.2"
bandit = "^1.7.9"
pytest = "^8.3.2"
hypothesis = "^6.112.3"
pytest-benchmark = "^4.0.0"
sphinx = "^7.4"
furo = "^2024.8.6"
myst-parser = "^3.0.1"
sphinx-autodoc-typehints = "^2.3"
pre-commit = "^3.8.0"
sphinxcontrib-mermaid = "^1.0.0"
pylint = ">=3.3"
graphviz = "^0.21"
pycg = "^0.0.8"
types-pyyaml = "^6.0.12.20250822"

[tool.poetry.scripts]
stickit = "stickit.cli:main"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
minversion = "8.0"
#addopts = "-ra --disable-warnings"
addopts = "-ra"
testpaths = ["tests"]
markers = [
  "slow: time-consuming tests (skipped in CI by default)",
  "medium: medium-size molecules",
  "large: large molecules",
  "mopac: requires MOPAC executable",
  "bench: optional benchmark/regression tests",
]
filterwarnings = [
  "ignore:pkg_resources is deprecated as an API.*:UserWarning:smirnoff99frosst",
  "ignore:Deprecated call to `pkg_resources\\.declare_namespace.*`:DeprecationWarning:pkg_resources",
]

[tool.black]
line-length = 120
target-version = ["py311"]

[tool.ruff]
line-length = 120

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
# Treat untyped defs as Any to reduce noise from heavy scientific libs
disallow_subclassing_any = false
disallow_any_generics = false

# Per-module overrides for non-typed libs
[[tool.mypy.overrides]]
module = [
    "seaborn",
    "boto3",
    "mlflow",
    "gypsum_dl",
    "gypsum_dl.*",
    "dimorphite_dl",
    "dimorphite_dl.*",
    "openmm",
    "openmm.*",
    "openff",
    "openff.*",
    "pyspark",
    "pyspark.*",
]
ignore_missing_imports = true

# RDKit is importable but stubs are partial; suppress attr-defined noise
[[tool.mypy.overrides]]
module = ["rdkit", "rdkit.*"]
ignore_missing_imports = true
disable_error_code = ["attr-defined"]
