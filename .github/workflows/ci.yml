# .github/workflows/ci.yml
name: CI
on:
  push:
    branches: [ main, '**' ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11"]

    defaults:
      run:
        shell: bash -el {0}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install Poetry (system)
        uses: snok/install-poetry@v1
        with:
          version: 2.0.1
          virtualenvs-create: false

      - name: Install Poetry export plugin
        run: poetry self add poetry-plugin-export

      - name: Cache conda pkgs
        uses: actions/cache@v4
        with:
          path: ~/.conda/pkgs
          key: ${{ runner.os }}-condapkgs-${{ hashFiles('environment.yml') }}
          restore-keys: ${{ runner.os }}-condapkgs-

#      - name: Set up Miniconda
#        uses: conda-incubator/setup-miniconda@v3
#        with:
#          auto-activate-base: true
#          python-version: ${{ matrix.python-version }}
#          channels: conda-forge
#          channel-priority: strict
#          use-mamba: true

      - name: Guard - lock & requirements sanity
        run: |
          poetry check --lock
          ! grep -R "@ file:///" -n . || (echo "Found file:// refs; fix requirements.txt" && exit 1)

      - name: Build wheel/sdist (system Poetry)
        run: |
          poetry build
          ls -l dist/

      - name: Create/Update conda env
        run: |
          conda env create -n stickit-ci -f environment.yml || \
          conda env update  -n stickit-ci -f environment.yml --prune
          conda activate stickit-ci
          python -V

      - name: Install built wheel
        run: |
          conda activate stickit-ci
          pip install --no-deps dist/*.whl

      - name: Import smoke
        run: |
          conda activate stickit-ci
          python - <<'PY'
          import stickit, rdkit, openmm
          from openff.toolkit import __version__ as off_ver
          print("stickit", getattr(stickit, "__version__", "n/a"))
          print("rdkit", rdkit.__version__)
          print("openmm", openmm.__version__)
          print("openff", off_ver)
          PY

      - name: Tests
        run: |
          conda activate stickit-ci
          pytest -q

      - name: Build docs
        run: |
          conda activate stickit-ci
          sphinx-build -b html docs docs/_build/html

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: docs/_build/html

      - name: Upload dist artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
