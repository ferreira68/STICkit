name: Check Env Drift

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  drift:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # System Python for Poetry (separate from any conda env)
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: pip

      # Install Poetry as a system-level command
      - name: Install Poetry (system)
        uses: snok/install-poetry@v1
        with:
          version: 2.0.1
          virtualenvs-create: false

      - name: Install Poetry export plugin
        run: poetry self add poetry-plugin-export

      # Ensure pyproject and poetry.lock are consistent
      - name: Check lock is up-to-date
        run: poetry check --lock

      # Re-export requirements from the lock into temp files
      - name: Re-export requirements from Poetry
        run: |
          poetry export -f requirements.txt -o requirements.exp.txt
          poetry export -f requirements.txt --with dev -o requirements-dev.exp.txt

      # Compare against committed files (fail if different)
      - name: Diff requirements
        run: |
          set -e
          diff -u requirements.txt requirements.exp.txt || (echo "::error title=requirements.txt drift::Run 'make env-sync' and commit the updated requirements.txt" && exit 1)
          diff -u requirements-dev.txt requirements-dev.exp.txt || (echo "::error title=requirements-dev.txt drift::Run 'make env-sync' and commit the updated requirements-dev.txt" && exit 1)

      # Sanity checks for environment.yml content
      - name: Validate environment.yml
        run: |
          set -e
          test -f environment.yml || (echo "::error ::environment.yml missing. Run 'make env-sync'." && exit 1)
          # Must pin Python in conda deps
          grep -qE '^ *- +python=' environment.yml || (echo "::error ::environment.yml must pin python with 'python=X.Y'." && exit 1)
          # Must install pip requirements via -r lines
          grep -q -- "-r requirements.txt" environment.yml || (echo "::error ::environment.yml must include '-r requirements.txt' under pip:." && exit 1)
          grep -q -- "-r requirements-dev.txt" environment.yml || (echo "::error ::environment.yml must include '-r requirements-dev.txt' under pip:." && exit 1)
          # Guard against bad paths from pip freeze / conda build artifacts
          ! grep -R "@ file:///" -n . || (echo "::error ::Found 'file://' refs. Re-export with 'make env-sync'." && exit 1)
          ! grep -q "feedstock_root/build_artifacts" environment.yml || (echo "::error ::Found conda build artifact paths in environment.yml." && exit 1)
